module scene;

import common;
import constraint;
import tools;
import material;
import sound;

[cxxnamespace("up::scene::components")]
use scene_component : struct;

struct Euler {
    [FloatRange(-180,180)]
    float pitch;
    [FloatRange(-180,180)]
    float yaw;
    [FloatRange(-180,180)]
    float roll;
}

scene_component Transform {
    [DisplayName("Pos")]
    vec3 position;

    [DisplayName("Rot")]
    quat rotation;
}

scene_component Mesh {
    MeshRef mesh;
    MaterialRef material;
}

scene_component Wave {
    float offset;
}

scene_component Spin {
    float radians;
}

scene_component Ding {
    [FloatRange(0, 3600)]
    float period = 1;
    SoundRef sound;
}

scene_component Body {
    float mass = 1;
}

scene_component Test {
    [DisplayName("Words")]
    string text = "test";

    int integer = 42;
    [IntRange(-10,10)]
    int limit;

    float real = -7;

    [DisplayName("Reference")]
    UUID ref;

    [Tooltip("This is a handy tip")]
    vec3 vec;
    quat rot;
    bool enabled;
    Euler angles;
    Euler* embedded;
    Euler[] array;
    int[] numbers;
}

